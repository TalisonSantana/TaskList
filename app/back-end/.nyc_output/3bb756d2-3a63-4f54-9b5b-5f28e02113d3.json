{"/home/talison/taskList/TaskList/app/back-end/src/app.ts":{"path":"/home/talison/taskList/TaskList/app/back-end/src/app.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":26},"end":{"line":5,"column":66}},"4":{"start":{"line":6,"column":17},"end":{"line":6,"column":36}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":29}},"6":{"start":{"line":10,"column":8},"end":{"line":10,"column":22}},"7":{"start":{"line":11,"column":8},"end":{"line":11,"column":64}},"8":{"start":{"line":11,"column":40},"end":{"line":11,"column":62}},"9":{"start":{"line":12,"column":8},"end":{"line":12,"column":39}},"10":{"start":{"line":13,"column":8},"end":{"line":13,"column":48}},"11":{"start":{"line":16,"column":30},"end":{"line":21,"column":9}},"12":{"start":{"line":17,"column":12},"end":{"line":17,"column":59}},"13":{"start":{"line":18,"column":12},"end":{"line":18,"column":92}},"14":{"start":{"line":19,"column":12},"end":{"line":19,"column":60}},"15":{"start":{"line":20,"column":12},"end":{"line":20,"column":19}},"16":{"start":{"line":22,"column":8},"end":{"line":22,"column":37}},"17":{"start":{"line":23,"column":8},"end":{"line":23,"column":36}},"18":{"start":{"line":26,"column":8},"end":{"line":26,"column":76}},"19":{"start":{"line":26,"column":36},"end":{"line":26,"column":74}},"20":{"start":{"line":29,"column":0},"end":{"line":29,"column":18}},"21":{"start":{"line":30,"column":0},"end":{"line":30,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":18},"end":{"line":14,"column":5}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":26},"end":{"line":11,"column":27}},"loc":{"start":{"line":11,"column":40},"end":{"line":11,"column":62}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":13},"end":{"line":24,"column":5}},"line":15},"3":{"name":"(anonymous_3)","decl":{"start":{"line":16,"column":30},"end":{"line":16,"column":31}},"loc":{"start":{"line":16,"column":51},"end":{"line":21,"column":9}},"line":16},"4":{"name":"(anonymous_4)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":16},"end":{"line":27,"column":5}},"line":25},"5":{"name":"(anonymous_5)","decl":{"start":{"line":26,"column":30},"end":{"line":26,"column":31}},"loc":{"start":{"line":26,"column":36},"end":{"line":26,"column":74}},"line":26}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":1,"10":1,"11":1,"12":4,"13":4,"14":4,"15":4,"16":1,"17":1,"18":0,"19":0,"20":1,"21":1},"f":{"0":1,"1":0,"2":1,"3":4,"4":0,"5":0},"b":{},"inputSourceMap":{"version":3,"file":"/home/talison/taskList/TaskList/app/back-end/src/app.ts","sources":["/home/talison/taskList/TaskList/app/back-end/src/app.ts"],"names":[],"mappings":";;;AAAA,mCAAmC;AACnC,mEAA4D;AAC5D,qCAA8B;AAE9B,MAAM,GAAG;IAGP;QACE,IAAI,CAAC,GAAG,GAAG,OAAO,EAAE,CAAC;QAErB,IAAI,CAAC,MAAM,EAAE,CAAC;QAEd,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;QACxD,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,gBAAM,CAAC,CAAC;QACrB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,yBAAe,CAAC,CAAC;IAChC,CAAC;IAEO,MAAM;QACZ,MAAM,aAAa,GAA2B,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE;YAChE,GAAG,CAAC,MAAM,CAAC,6BAA6B,EAAE,GAAG,CAAC,CAAC;YAC/C,GAAG,CAAC,MAAM,CACR,8BAA8B,EAC9B,mCAAmC,CACpC,CAAC;YACF,GAAG,CAAC,MAAM,CAAC,8BAA8B,EAAE,GAAG,CAAC,CAAC;YAChD,IAAI,EAAE,CAAC;QACT,CAAC,CAAC;QAEF,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;QAC7B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IAC9B,CAAC;IAEM,KAAK,CAAC,IAAqB;QAChC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,mBAAmB,IAAI,EAAE,CAAC,CAAC,CAAC;IACtE,CAAC;CACF;AAEQ,kBAAG;AACG,WAAG,GAAK,IAAI,GAAG,EAAE,KAAC","sourcesContent":["import * as express from \"express\";\nimport errorMiddleware from \"./middlewares/middlewareError\";\nimport Routes from \"./routes\";\n\nclass App {\n  public app: express.Express;\n\n  constructor() {\n    this.app = express();\n\n    this.config();\n\n    this.app.get(\"/\", (req, res) => res.json({ ok: true }));\n    this.app.use(Routes);\n    this.app.use(errorMiddleware);\n  }\n\n  private config(): void {\n    const accessControl: express.RequestHandler = (_req, res, next) => {\n      res.header(\"Access-Control-Allow-Origin\", \"*\");\n      res.header(\n        \"Access-Control-Allow-Methods\",\n        \"GET,POST,DELETE,OPTIONS,PUT,PATCH\"\n      );\n      res.header(\"Access-Control-Allow-Headers\", \"*\");\n      next();\n    };\n\n    this.app.use(express.json());\n    this.app.use(accessControl);\n  }\n\n  public start(PORT: string | number): void {\n    this.app.listen(PORT, () => console.log(`Running on port ${PORT}`));\n  }\n}\n\nexport { App };\nexport const { app } = new App();\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1a8edd31149e1cbe5f8185f0eb29ffbf63ebe2e4"},"/home/talison/taskList/TaskList/app/back-end/src/middlewares/middlewareError.ts":{"path":"/home/talison/taskList/TaskList/app/back-end/src/middlewares/middlewareError.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":24},"end":{"line":11,"column":1}},"2":{"start":{"line":4,"column":4},"end":{"line":6,"column":5}},"3":{"start":{"line":5,"column":8},"end":{"line":5,"column":67}},"4":{"start":{"line":7,"column":4},"end":{"line":9,"column":5}},"5":{"start":{"line":8,"column":8},"end":{"line":8,"column":80}},"6":{"start":{"line":10,"column":4},"end":{"line":10,"column":70}},"7":{"start":{"line":12,"column":0},"end":{"line":12,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":24},"end":{"line":3,"column":25}},"loc":{"start":{"line":3,"column":50},"end":{"line":11,"column":1}},"line":3}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":4},"end":{"line":6,"column":5}},"type":"if","locations":[{"start":{"line":4,"column":4},"end":{"line":6,"column":5}},{"start":{"line":4,"column":4},"end":{"line":6,"column":5}}],"line":4},"1":{"loc":{"start":{"line":7,"column":4},"end":{"line":9,"column":5}},"type":"if","locations":[{"start":{"line":7,"column":4},"end":{"line":9,"column":5}},{"start":{"line":7,"column":4},"end":{"line":9,"column":5}}],"line":7},"2":{"loc":{"start":{"line":7,"column":8},"end":{"line":7,"column":74}},"type":"binary-expr","locations":[{"start":{"line":7,"column":8},"end":{"line":7,"column":39}},{"start":{"line":7,"column":43},"end":{"line":7,"column":74}}],"line":7}},"s":{"0":1,"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1},"f":{"0":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0]},"inputSourceMap":{"version":3,"file":"/home/talison/taskList/TaskList/app/back-end/src/middlewares/middlewareError.ts","sources":["/home/talison/taskList/TaskList/app/back-end/src/middlewares/middlewareError.ts"],"names":[],"mappings":";;AAEA,MAAM,eAAe,GAAG,CAAC,GAAoC,EAAE,GAAY,EAAE,GAAa,EAAE,KAAmB,EAAE,EAAE;IACjH,IAAI,GAAG,CAAC,IAAI,EAAE;QACZ,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;KAC5D;IACD,IAAI,GAAG,CAAC,OAAO,KAAK,eAAe,IAAI,GAAG,CAAC,OAAO,KAAK,eAAe,EAAE;QACtE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,6BAA6B,EAAE,CAAC,CAAC;KACzE;IACD,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,uBAAuB,EAAE,CAAC,CAAC;AACpE,CAAC,CAAC;AAEF,kBAAe,eAAe,CAAC","sourcesContent":["import { NextFunction, Request, Response } from \"express\";\n\nconst errorMiddleware = (err: {code: number, message: string}, req: Request, res: Response, _next: NextFunction) => {\n  if (err.code) {\n    return res.status(err.code).json({ message: err.message });\n  }\n  if (err.message === 'invalid token' || err.message === 'jwt malformed') {\n    return res.status(401).json({ message: 'Token must be a valid token' });\n  }\n  return res.status(500).json({ message: 'internal server error' });\n};\n\nexport default errorMiddleware;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e9560c0d089bce133713f9fe6e55da93b0a4865a"},"/home/talison/taskList/TaskList/app/back-end/src/routes/index.ts":{"path":"/home/talison/taskList/TaskList/app/back-end/src/routes/index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":18},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":14},"end":{"line":5,"column":37}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":41}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":24}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/home/talison/taskList/TaskList/app/back-end/src/routes/index.ts","sources":["/home/talison/taskList/TaskList/app/back-end/src/routes/index.ts"],"names":[],"mappings":";;AAAA,qCAAiC;AACjC,2CAAoC;AAGpC,MAAM,KAAK,GAAG,IAAA,gBAAM,GAAE,CAAC;AAEvB,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,mBAAS,CAAC,CAAC;AAE/B,kBAAe,KAAK,CAAC","sourcesContent":["import { Router } from 'express';\nimport routeTask from './routeTask';\n\n\nconst route = Router();\n\nroute.use('/tasks', routeTask);\n\nexport default route;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5154cc48f0eb9eeb3c08bb375e8f529c14ed7f14"},"/home/talison/taskList/TaskList/app/back-end/src/routes/routeTask.ts":{"path":"/home/talison/taskList/TaskList/app/back-end/src/routes/routeTask.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":18},"end":{"line":3,"column":36}},"2":{"start":{"line":5,"column":25},"end":{"line":5,"column":65}},"3":{"start":{"line":6,"column":25},"end":{"line":6,"column":66}},"4":{"start":{"line":7,"column":22},"end":{"line":7,"column":56}},"5":{"start":{"line":8,"column":19},"end":{"line":13,"column":1}},"6":{"start":{"line":9,"column":23},"end":{"line":9,"column":53}},"7":{"start":{"line":10,"column":20},"end":{"line":10,"column":57}},"8":{"start":{"line":11,"column":23},"end":{"line":11,"column":60}},"9":{"start":{"line":12,"column":4},"end":{"line":12,"column":22}},"10":{"start":{"line":14,"column":18},"end":{"line":14,"column":41}},"11":{"start":{"line":15,"column":0},"end":{"line":15,"column":45}},"12":{"start":{"line":16,"column":0},"end":{"line":16,"column":45}},"13":{"start":{"line":17,"column":0},"end":{"line":17,"column":44}},"14":{"start":{"line":18,"column":0},"end":{"line":18,"column":50}},"15":{"start":{"line":19,"column":0},"end":{"line":19,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":19},"end":{"line":8,"column":20}},"loc":{"start":{"line":8,"column":25},"end":{"line":13,"column":1}},"line":8}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":4,"7":4,"8":4,"9":4,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1},"f":{"0":4},"b":{},"inputSourceMap":{"version":3,"file":"/home/talison/taskList/TaskList/app/back-end/src/routes/routeTask.ts","sources":["/home/talison/taskList/TaskList/app/back-end/src/routes/routeTask.ts"],"names":[],"mappings":";;AAAA,qCAAiC;AACjC,mDAAmD;AACnD,kEAA2D;AAC3D,mEAA4D;AAC5D,yDAAkD;AAEjD,MAAM,UAAU,GAAG,GAAG,EAAE;IACrB,MAAM,UAAU,GAAG,IAAI,wBAAc,EAAE,CAAC;IACxC,MAAM,OAAO,GAAG,IAAI,qBAAW,CAAC,UAAU,CAAC,CAAC;IAC5C,MAAM,UAAU,GAAG,IAAI,wBAAc,CAAC,OAAO,CAAC,CAAC;IAC/C,OAAO,UAAU,CAAC;AACpB,CAAC,CAAA;AAEH,MAAM,SAAS,GAAG,IAAA,gBAAM,GAAE,CAAC;AAE3B,SAAS,CAAC,GAAG,CAAC,GAAG,EAAE,UAAU,EAAE,CAAC,WAAW,CAAC,CAAC;AAC7C,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,UAAU,EAAE,CAAC,UAAU,CAAC,CAAC;AAC7C,SAAS,CAAC,GAAG,CAAC,GAAG,EAAE,UAAU,EAAE,CAAC,UAAU,CAAC,CAAC;AAC5C,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE,UAAU,EAAE,CAAC,UAAU,CAAC,CAAC;AAElD,kBAAe,SAAS,CAAC","sourcesContent":["import { Router } from 'express';\n// import entityTask from '../entities/entityTask';\nimport TaskController from '../controllers/TaskController';\nimport TaskRepository from '../repositories/TaskRepository';\nimport TaskService from '../services/TaskService';\n\n const entityTask = () => {\n    const repository = new TaskRepository();\n    const service = new TaskService(repository);\n    const controller = new TaskController(service);\n    return controller;\n  }\n\nconst routeUser = Router();\n\nrouteUser.get('/', entityTask().getAllTasks);\nrouteUser.post('/', entityTask().createTask);\nrouteUser.put('/', entityTask().updateTask);\nrouteUser.delete('/:id', entityTask().deleteTask);\n\nexport default routeUser;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"30c5025ea6bdbc2539afbaab119c68eb2b4a7782"},"/home/talison/taskList/TaskList/app/back-end/src/controllers/TaskController.ts":{"path":"/home/talison/taskList/TaskList/app/back-end/src/controllers/TaskController.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":8},"end":{"line":5,"column":31}},"2":{"start":{"line":6,"column":8},"end":{"line":14,"column":10}},"3":{"start":{"line":7,"column":12},"end":{"line":13,"column":13}},"4":{"start":{"line":8,"column":30},"end":{"line":8,"column":62}},"5":{"start":{"line":9,"column":16},"end":{"line":9,"column":51}},"6":{"start":{"line":12,"column":16},"end":{"line":12,"column":28}},"7":{"start":{"line":15,"column":8},"end":{"line":24,"column":10}},"8":{"start":{"line":16,"column":27},"end":{"line":16,"column":37}},"9":{"start":{"line":17,"column":12},"end":{"line":23,"column":13}},"10":{"start":{"line":18,"column":29},"end":{"line":18,"column":62}},"11":{"start":{"line":19,"column":16},"end":{"line":19,"column":50}},"12":{"start":{"line":22,"column":16},"end":{"line":22,"column":28}},"13":{"start":{"line":25,"column":8},"end":{"line":33,"column":10}},"14":{"start":{"line":26,"column":12},"end":{"line":32,"column":13}},"15":{"start":{"line":27,"column":29},"end":{"line":27,"column":68}},"16":{"start":{"line":28,"column":16},"end":{"line":28,"column":50}},"17":{"start":{"line":31,"column":16},"end":{"line":31,"column":28}},"18":{"start":{"line":34,"column":8},"end":{"line":42,"column":10}},"19":{"start":{"line":35,"column":12},"end":{"line":41,"column":13}},"20":{"start":{"line":36,"column":29},"end":{"line":36,"column":68}},"21":{"start":{"line":37,"column":16},"end":{"line":37,"column":50}},"22":{"start":{"line":40,"column":16},"end":{"line":40,"column":28}},"23":{"start":{"line":43,"column":8},"end":{"line":43,"column":31}},"24":{"start":{"line":46,"column":0},"end":{"line":46,"column":33}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":25},"end":{"line":44,"column":5}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":27},"end":{"line":6,"column":28}},"loc":{"start":{"line":6,"column":53},"end":{"line":14,"column":9}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":15,"column":26},"end":{"line":15,"column":27}},"loc":{"start":{"line":15,"column":52},"end":{"line":24,"column":9}},"line":15},"3":{"name":"(anonymous_3)","decl":{"start":{"line":25,"column":26},"end":{"line":25,"column":27}},"loc":{"start":{"line":25,"column":52},"end":{"line":33,"column":9}},"line":25},"4":{"name":"(anonymous_4)","decl":{"start":{"line":34,"column":26},"end":{"line":34,"column":27}},"loc":{"start":{"line":34,"column":52},"end":{"line":42,"column":9}},"line":34}},"branchMap":{},"s":{"0":1,"1":4,"2":4,"3":1,"4":1,"5":1,"6":0,"7":4,"8":1,"9":1,"10":1,"11":1,"12":0,"13":4,"14":1,"15":1,"16":1,"17":0,"18":4,"19":1,"20":1,"21":1,"22":0,"23":4,"24":1},"f":{"0":4,"1":1,"2":1,"3":1,"4":1},"b":{},"inputSourceMap":{"version":3,"file":"/home/talison/taskList/TaskList/app/back-end/src/controllers/TaskController.ts","sources":["/home/talison/taskList/TaskList/app/back-end/src/controllers/TaskController.ts"],"names":[],"mappings":";;AAGA,MAAqB,cAAc;IACjC,YAAoB,OAAiB;QAAjB,YAAO,GAAP,OAAO,CAAU;QAIrC,gBAAW,GAAG,KAAK,EAAE,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;YACtE,IAAI;gBACF,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;gBAC/C,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACpC;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI,CAAC,KAAK,CAAC,CAAC;aACb;QACH,CAAC,CAAC;QAEF,eAAU,GAAG,KAAK,EAAE,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;YACrE,MAAM,EAAE,EAAE,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;YAC1B,IAAI;gBACF,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;gBAC/C,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACnC;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI,CAAC,KAAK,CAAC,CAAC;aACb;QACH,CAAC,CAAC;QAEF,eAAU,GAAG,KAAK,EAAE,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;YACrE,IAAI;gBACF,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBACrD,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACnC;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI,CAAC,KAAK,CAAC,CAAC;aACb;QACH,CAAC,CAAC;QAEF,eAAU,GAAG,KAAK,EAAE,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;YACrE,IAAI;gBACF,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBACrD,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACnC;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI,CAAC,KAAK,CAAC,CAAC;aACb;QACH,CAAC,CAAC;QAtCA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;CAsCF;AAzCD,iCAyCC","sourcesContent":["import { NextFunction, Request, Response } from \"express\";\nimport { IService } from \"../interfaces/ITask\";\n\nexport default class TaskController {\n  constructor(private service: IService) {\n    this.service = service;\n  }\n\n  getAllTasks = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const tasks = await this.service.getAllTasks();\n      return res.status(200).json(tasks);\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  deleteTask = async (req: Request, res: Response, next: NextFunction) => {\n    const { id } = req.params;\n    try {\n      const task = await this.service.deleteTask(id);\n      return res.status(200).json(task);\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  updateTask = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const task = await this.service.updateTask(req.body);\n      return res.status(200).json(task);\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  createTask = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const task = await this.service.createTask(req.body);\n      return res.status(201).json(task);\n    } catch (error) {\n      next(error);\n    }\n  };\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a3c3ed2f33047f7127657105ef902073e771ba09"},"/home/talison/taskList/TaskList/app/back-end/src/repositories/TaskRepository.ts":{"path":"/home/talison/taskList/TaskList/app/back-end/src/repositories/TaskRepository.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":15},"end":{"line":3,"column":49}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":27}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":27}},"4":{"start":{"line":10,"column":22},"end":{"line":10,"column":48}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":21}},"6":{"start":{"line":14,"column":21},"end":{"line":18,"column":10}},"7":{"start":{"line":19,"column":8},"end":{"line":19,"column":20}},"8":{"start":{"line":22,"column":58},"end":{"line":22,"column":62}},"9":{"start":{"line":23,"column":23},"end":{"line":23,"column":59}},"10":{"start":{"line":24,"column":21},"end":{"line":28,"column":10}},"11":{"start":{"line":29,"column":8},"end":{"line":29,"column":20}},"12":{"start":{"line":32,"column":54},"end":{"line":32,"column":58}},"13":{"start":{"line":33,"column":23},"end":{"line":33,"column":59}},"14":{"start":{"line":34,"column":21},"end":{"line":38,"column":10}},"15":{"start":{"line":39,"column":8},"end":{"line":39,"column":20}},"16":{"start":{"line":42,"column":0},"end":{"line":42,"column":33}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":40},"end":{"line":8,"column":5}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":24},"end":{"line":12,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":25},"end":{"line":20,"column":5}},"line":13},"3":{"name":"(anonymous_3)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":27},"end":{"line":30,"column":5}},"line":21},"4":{"name":"(anonymous_4)","decl":{"start":{"line":31,"column":4},"end":{"line":31,"column":5}},"loc":{"start":{"line":31,"column":27},"end":{"line":40,"column":5}},"line":31}},"branchMap":{"0":{"loc":{"start":{"line":5,"column":16},"end":{"line":5,"column":38}},"type":"default-arg","locations":[{"start":{"line":5,"column":24},"end":{"line":5,"column":38}}],"line":5},"1":{"loc":{"start":{"line":23,"column":23},"end":{"line":23,"column":59}},"type":"cond-expr","locations":[{"start":{"line":23,"column":47},"end":{"line":23,"column":51}},{"start":{"line":23,"column":54},"end":{"line":23,"column":59}}],"line":23},"2":{"loc":{"start":{"line":33,"column":23},"end":{"line":33,"column":59}},"type":"cond-expr","locations":[{"start":{"line":33,"column":47},"end":{"line":33,"column":51}},{"start":{"line":33,"column":54},"end":{"line":33,"column":59}}],"line":33}},"s":{"0":1,"1":1,"2":4,"3":4,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1},"f":{"0":4,"1":1,"2":1,"3":1,"4":1},"b":{"0":[4],"1":[0,1],"2":[0,1]},"inputSourceMap":{"version":3,"file":"/home/talison/taskList/TaskList/app/back-end/src/repositories/TaskRepository.ts","sources":["/home/talison/taskList/TaskList/app/back-end/src/repositories/TaskRepository.ts"],"names":[],"mappings":";;AACA,kDAA2C;AAE3C,MAAqB,cAAc;IACjC,YAAoB,QAAQ,cAAI;QAAZ,UAAK,GAAL,KAAK,CAAO;QAC9B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IACD,KAAK,CAAC,WAAW;QACf,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;QACzC,OAAO,KAAK,CAAC;IACf,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,EAAU;QACzB,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;YACpC,KAAK,EAAE;gBACL,EAAE;aACH;SACF,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;IACd,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,IAAW;QAC1B,MAAM,EAAE,EAAE,EAAE,QAAQ,EAAE,WAAW,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC;QACvD,MAAM,MAAM,GAAG,UAAU,KAAK,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QACpD,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAClC,EAAE,QAAQ,EAAE,WAAW,EAAE,UAAU,EAAE,MAAM,EAAE,EAC7C;YACE,KAAK,EAAE;gBACL,EAAE;aACH;SACF,CACF,CAAC;QACF,OAAO,IAAI,CAAC;IACd,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,IAAW;QAC1B,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC;QACnD,MAAM,MAAM,GAAG,UAAU,KAAK,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QACpD,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;YACnC,QAAQ;YACR,WAAW;YACX,UAAU,EAAE,MAAM;SACnB,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AA1CD,iCA0CC","sourcesContent":["import ITask from \"../interfaces/ITask\";\nimport Task from \"../database/models/Task\";\n\nexport default class TaskRepository {\n  constructor(private tasks = Task) {\n    this.tasks = tasks;\n  }\n  async getAllTasks(): Promise<ITask[]> {\n    const tasks = await this.tasks.findAll();\n    return tasks;\n  }\n\n  async deleteTask(id: string): Promise<number> {\n    const task = await this.tasks.destroy({\n      where: {\n        id,\n      },\n    });\n    return task;\n  }\n\n  async updateTask(body: ITask): Promise<[affectedCount: number]> {\n    const { id, taskName, description, inProgress } = body;\n    const status = inProgress === \"true\" ? true : false;\n    const task = await this.tasks.update(\n      { taskName, description, inProgress: status },\n      {\n        where: {\n          id,\n        },\n      }\n    );\n    return task;\n  }\n\n  async createTask(body: ITask): Promise<ITask> {\n    const { taskName, description, inProgress } = body;\n    const status = inProgress === \"true\" ? true : false;\n    const task = await this.tasks.create({\n      taskName,\n      description,\n      inProgress: status,\n    });\n    return task;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"36f1ca70af9701df50d49907ee89ad5dc62bddd4"},"/home/talison/taskList/TaskList/app/back-end/src/database/models/Task.ts":{"path":"/home/talison/taskList/TaskList/app/back-end/src/database/models/Task.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":20},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":11},"end":{"line":4,"column":23}},"3":{"start":{"line":7,"column":0},"end":{"line":31,"column":3}},"4":{"start":{"line":32,"column":0},"end":{"line":32,"column":23}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/home/talison/taskList/TaskList/app/back-end/src/database/models/Task.ts","sources":["/home/talison/taskList/TaskList/app/back-end/src/database/models/Task.ts"],"names":[],"mappings":";;AAAA,yCAA6C;AAC7C,wBAAmB;AAEnB,MAAM,IAAK,SAAQ,iBAAK;CAKvB;AAED,IAAI,CAAC,IAAI,CACP;IACE,EAAE,EAAE;QACF,IAAI,EAAE,qBAAS,CAAC,OAAO;QACvB,UAAU,EAAE,IAAI;QAChB,aAAa,EAAE,IAAI;KACpB;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,qBAAS,CAAC,MAAM;QACtB,KAAK,EAAE,WAAW;KACnB;IACD,UAAU,EAAE;QACV,IAAI,EAAE,qBAAS,CAAC,OAAO;QACvB,KAAK,EAAE,aAAa;QACpB,YAAY,EAAE,IAAI;KACnB;IACD,WAAW,EAAE;QACX,IAAI,EAAE,qBAAS,CAAC,MAAM;QACtB,KAAK,EAAE,aAAa;KACrB;CACF,EACD;IACE,WAAW,EAAE,IAAI;IACjB,SAAS,EAAE,UAAE;IACb,SAAS,EAAE,MAAM;IACjB,UAAU,EAAE,KAAK;CAClB,CACF,CAAA;AAED,kBAAe,IAAI,CAAC","sourcesContent":["import { DataTypes, Model } from 'sequelize';\nimport db from '.';\n\nclass Task extends Model {\n  public id!: number;\n  public taskName!: string;\n  public inProgress!: boolean;\n  public description!: string;\n}\n\nTask.init(\n  {\n    id: {\n      type: DataTypes.INTEGER,\n      primaryKey: true,\n      autoIncrement: true,\n    },\n    taskName: {\n      type: DataTypes.STRING,\n      field: 'task_name',\n    },\n    inProgress: {\n      type: DataTypes.BOOLEAN,\n      field: 'in_progress',\n      defaultValue: true,\n    },\n    description: {\n      type: DataTypes.STRING,\n      field: 'description',\n    },\n  },\n  {\n    underscored: true,\n    sequelize: db,\n    modelName: 'task',\n    timestamps: false,\n  },\n)\n\nexport default Task;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9745c803c56974e0f6b3eb3a9857cf6a73f28ebb"},"/home/talison/taskList/TaskList/app/back-end/src/database/models/index.ts":{"path":"/home/talison/taskList/TaskList/app/back-end/src/database/models/index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":20},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":44}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":52}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/home/talison/taskList/TaskList/app/back-end/src/database/models/index.ts","sources":["/home/talison/taskList/TaskList/app/back-end/src/database/models/index.ts"],"names":[],"mappings":";;AAAA,yCAAsC;AACtC,6CAA6C;AAE7C,kBAAe,IAAI,qBAAS,CAAC,MAAM,CAAC,CAAC","sourcesContent":["import { Sequelize } from 'sequelize';\nimport * as config from '../config/database';\n\nexport default new Sequelize(config);\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"84358e4eed4db0c16aa5e5a5f30207499df8b34a"},"/home/talison/taskList/TaskList/app/back-end/src/services/TaskService.ts":{"path":"/home/talison/taskList/TaskList/app/back-end/src/services/TaskService.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":8},"end":{"line":5,"column":27}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":27}},"3":{"start":{"line":9,"column":22},"end":{"line":9,"column":52}},"4":{"start":{"line":10,"column":8},"end":{"line":10,"column":21}},"5":{"start":{"line":13,"column":21},"end":{"line":13,"column":52}},"6":{"start":{"line":14,"column":8},"end":{"line":14,"column":20}},"7":{"start":{"line":17,"column":21},"end":{"line":17,"column":54}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":26}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":20}},"10":{"start":{"line":22,"column":21},"end":{"line":22,"column":54}},"11":{"start":{"line":23,"column":8},"end":{"line":23,"column":20}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":23},"end":{"line":7,"column":5}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":24},"end":{"line":11,"column":5}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":25},"end":{"line":15,"column":5}},"line":12},"3":{"name":"(anonymous_3)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":27},"end":{"line":20,"column":5}},"line":16},"4":{"name":"(anonymous_4)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":27},"end":{"line":24,"column":5}},"line":21}},"branchMap":{},"s":{"0":1,"1":4,"2":4,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1},"f":{"0":4,"1":1,"2":1,"3":1,"4":1},"b":{},"inputSourceMap":{"version":3,"file":"/home/talison/taskList/TaskList/app/back-end/src/services/TaskService.ts","sources":["/home/talison/taskList/TaskList/app/back-end/src/services/TaskService.ts"],"names":[],"mappings":";;AAEA,MAAqB,WAAW;IAC9B,YAAoB,KAAa;QAAb,UAAK,GAAL,KAAK,CAAQ;QAC/B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAED,KAAK,CAAC,WAAW;QACf,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;QAC7C,OAAO,KAAK,CAAC;IACf,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,EAAU;QACzB,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAC7C,OAAO,IAAI,CAAC;IACd,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,IAAW;QAC1B,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC/C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,OAAO,IAAI,CAAC;IACd,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,IAAW;QAC1B,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC/C,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AAzBD,8BAyBC","sourcesContent":["import ITask, { IModel } from \"../interfaces/ITask\";\n\nexport default class TaskService {\n  constructor(private model: IModel) {\n    this.model = model;\n  }\n\n  async getAllTasks(): Promise<ITask[]> {\n    const tasks = await this.model.getAllTasks();\n    return tasks;\n  }\n\n  async deleteTask(id: string): Promise<number> {\n    const task = await this.model.deleteTask(id);\n    return task;\n  }\n\n  async updateTask(body: ITask): Promise<[affectedCount: number]> {\n    const task = await this.model.updateTask(body);\n    console.log(task);\n    return task;\n  }\n\n  async createTask(body: ITask): Promise<ITask> {\n    const task = await this.model.createTask(body);\n    return task;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a5d3579dae33f182db83ce41696d8aa546c7843d"}}